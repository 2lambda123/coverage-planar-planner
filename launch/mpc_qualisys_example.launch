<launch>



<arg name="mav_name" default="Neo"/>
<arg name="world_name" default="basic"/>
<arg name="enable_logging" default="false"/>
<arg name="enable_ground_truth" default="true"/>
<arg name="log_file" default="$(arg mav_name)"/>
<arg name="output" default="screen"/>



<include file="$(find qualisys)/launch/qualisys.launch">
</include>

<remap from='$(arg mav_name)/odom' to='$(arg mav_name)/odometry'/>
<include file="$(find qualisys)/launch/qualisys_odom.launch">
  <arg name='model' value='$(arg mav_name)'/>
</include>


<group ns="$(arg mav_name)">

  <rosparam param='altitude'>0.5</rosparam>

  <node
    name="mav_linear_mpc"
    pkg="mav_linear_mpc"
    type="mav_linear_mpc_node_controller_only"
    respawn="false"
    clear_params="true"
    output="screen">
    <rosparam file="$(find mav_linear_mpc)/parameters/linear_mpc.yaml" />
  </node>

  <node
    name="PD_attitude_controller"
    pkg="mav_linear_mpc"
    type="PD_attitude_controller_node"
    respawn="true"
    clear_params="true"
    output="screen">
    <rosparam file="$(find mav_linear_mpc)/parameters/PD_attitude.yaml" />
  </node>

  <node
    name='takeoff_node'
    pkg='coverage_planar_planner'
    type='takeoff_node.py'>
    <remap from='cmd_traj' to='command/trajectory'/>
  </node>

  <node
  name='planner_node'
  pkg='coverage_planar_planner'
  type='planner_node.py'
  />

  <node
      name='plotter_node'
      pkg='coverage_planar_planner'
      type='plotter_node.py'>
  </node>



  <node
      name='odometry_to_pose_bridge'
      pkg='coverage_planar_planner'
      type='odometry_to_pose_bridge.py'>
  </node>


  <node
      name='cmd_vel_to_cmd_traj_bridge'
      pkg='coverage_planar_planner'
      type='cmd_vel_to_cmd_traj_bridge.py'>
    <remap from="cmd_traj" to="command/trajectory"/>
  </node>


  <node
  name='rqt_service_caller'
  pkg='rqt_service_caller'
  type='rqt_service_caller'
  />





</group>



</launch>
